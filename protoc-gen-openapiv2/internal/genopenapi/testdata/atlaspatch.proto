syntax = "proto3";
package testdata;

import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "protoc-gen-openapiv2/internal/genopenapi/testdata/imports/resource.proto";
import "protoc-gen-openapiv2/internal/genopenapi/testdata/imports/collection_operators.proto";

option go_package = "github.com/infobloxopen/atlas-gentool/testdata;test";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "OpenAPI V2 Atlas Patch Test";
    version: "2.0";
    contact: {
      name: "John Doe";
      url: "https://github.com/infobloxprivate/atlas-contacts-app";
      email: "jdoe@infoblox.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

message Contact {
  // Unique ID number for this contact.
  atlas.rpc.Identifier id = 1;

  string name = 2;
  string email = 3;

  enum PhoneType {
    MOBILE = 0;
    HOME = 1;
    WORK = 2;
  }

  message PhoneNumber {
    string number = 1;
    PhoneType type = 2;
  }

  repeated PhoneNumber phones = 4;
  google.protobuf.Timestamp last_updated = 5;
}

message GetContactRequest {
  // Unique ID number for this contact.
  atlas.rpc.Identifier id = 1;
}

message GetContactResponse {
  Contact result = 1;
}

message CreateContactRequest {
  Contact payload = 1;
}

message CreateContactResponse {
  Contact result = 1;
}

message ListContactRequest {
  infoblox.api.Filtering filter = 1;
  infoblox.api.Sorting order_by = 2;
  infoblox.api.FieldSelection fields = 3;
  infoblox.api.Pagination paging = 4;
  reserved 5;
}

message ListContactResponse {
  repeated Contact results = 1;
  infoblox.api.PageInfo page = 2;
}

message UpdateContactRequest {
  Contact payload = 1;
  google.protobuf.FieldMask fields = 2;
}

message UpdateContactResponse {
  Contact result = 1;
}

message GetPrivateContactRequest {
  // Unique ID number for this contact.
  atlas.rpc.Identifier id = 1;
}

message GetPrivateContactResponse {
  Contact result = 1;
}

message MimicObjectResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      type: STRING,
      description: "this message mimics string type, however when put in response rendered as a definition",
    },
  };
  enum MimicResponseEnum {
    VALUE_ONE = 0;
    VALUE_TWO = 1;
  };
  string response_value_one = 1;
  string response_value_two = 2;
  MimicResponseEnum response_enum = 3;
}

message MimicObjectRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      type: STRING,
      description: "this message mimics string type, however when put in request rendered as a definition",
    },
  };
  enum MimicRequestEnum {
    VALUE_ONE = 0;
    VALUE_TWO = 1;
  };
  string request_value_one = 1;
  string request_value_two = 2;
  MimicRequestEnum request_enum = 3;
}

message MimicObjectHidden {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      type: STRING,
      description: "this message mimics string type.",
    },
  };

  enum HiddenEnum {
    VALUE_ONE = 0;
    VALUE_TWO = 1;
  };

  string hidden_value_one = 1;
  string hidden_value_two = 2;

  HiddenEnum hidden_enum = 3;
}

service ContactService {
  rpc Get (GetContactRequest) returns (GetContactResponse) {
    option (google.api.http) = {
      get: "/contact/{id.resource_id}"
    };
  }

  /* Create a contact.

  Use this method to create a contact entry in the database.
  */
  rpc Create(CreateContactRequest) returns (CreateContactResponse) {
    option (google.api.http) =  {
      post: "/contact"
      body: "payload"
    };
  }

  /* List contacts.

  Use this method to retrive list of contact objects.
  */
  rpc List (ListContactRequest) returns (ListContactResponse) {
    option (google.api.http) = {
      get: "/contacts"
    };
  }

  /* Update a contact.

  Use this method to update a contact identified by its id.
  */
  rpc Update(UpdateContactRequest) returns (UpdateContactResponse) {
    option (google.api.http) = {
      put: "/contact/{payload.id.resource_id}"
      body: "payload"
      additional_bindings: {
        patch: "/contact/{payload.id.resource_id}"
        body: "payload"
      }
    };
  }


  /* Test private option.

  Use this method to check if an RPC tagged as private is excluded from
  generated OpenAPI document.
  */
  rpc GetPrivate (GetPrivateContactRequest) returns (GetPrivateContactResponse) {
    option (google.api.http) = {
      get: "/private/contact/{id.resource_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "private"
    };
  }

  /* Test getting objects with mimicked primitive types.

  For more info see https://github.com/infobloxopen/grpc-gateway/commit/b1b91ec20bc061ecbb8cafa21ea9fd96f4e06337
  */
  rpc GetMimic(google.protobuf.Empty) returns (MimicObjectResponse) {
    option (google.api.http) = {
      get: "/mimic",
    };
  }

  /* Test posting objects with mimicked primitive types.

  For more info see https://github.com/infobloxopen/grpc-gateway/commit/b1b91ec20bc061ecbb8cafa21ea9fd96f4e06337
  */
  rpc PostMimic(MimicObjectRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/mimic/{request_value_one}",
      body: "*",
    };
  }
}
